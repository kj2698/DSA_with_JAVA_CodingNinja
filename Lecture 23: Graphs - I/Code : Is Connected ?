Code : Is Connected ?
Send Feedback
Given an undirected graph G(V,E), check if the graph G is connected graph or not.
Note:
1. V is the number of vertices present in graph G and vertices are numbered from 0 to V-1. 
2. E is the number of edges present in graph G.
Input Format :
The first line of input contains two integers, that denote the value of V and E.
Each of the following E lines contains two integers, that denote that there exists an edge between vertex a and b.
Output Format :
The first and only line of output contains "true" if the given graph is connected or "false", otherwise.
Constraints :
0 <= V <= 1000
0 <= E <= (V * (V - 1)) / 2
0 <= a <= V - 1
0 <= b <= V - 1
Time Limit: 1 second
Sample Input 1:
4 4
0 1
0 3
1 2
2 3
Sample Output 1:
true
Sample Input 2:
4 3
0 1
1 3 
0 3
Sample Output 2:
false 
Sample Output 2 Explanation
The graph is not connected, even though vertices 0,1 and 3 are connected to each other but there isnâ€™t any path from vertices 0,1,3 to vertex 2. 
----------------------------------

import java.util.*;
import java.io.InputStreamReader;
import java.io.IOException;

public class Solution {

	public static void main(String[] args) throws NumberFormatException, IOException {
       
        /* Write Your Code Here
		 * Complete the Rest of the Program
		 * You have to take input and print the output yourself
		 */
        
        
        Scanner sc=new Scanner(System.in);
        int v=sc.nextInt();
        int e=sc.nextInt();
        if(v==0){
            System.out.println(true);
            return;
        }
        int [][] m=new int[v][v];
        for(int i=0;i<e;i++){
            int v1=sc.nextInt();
            int v2=sc.nextInt();
            m[v1][v2]=1;
            m[v2][v1]=1;
        }
        
        System.out.println(isConnected(m));

	}

    public static boolean isConnected(int [][] m){

        boolean [] visited = new boolean[m.length];
        pathExists(m,visited,0);
        for(int i=0;i<m.length;i++){
            if(!visited[i])
                return false;
        }
        return true;
    }

    private static void pathExists(int [][] m,boolean [] visited,int s){
        
		visited[s]=true;
        for(int i=0;i<m.length;i++){
            if(m[s][i]==1 && !visited[i]){
                pathExists(m,visited,i);
            }
        }
    }
}
